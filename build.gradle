import java.nio.file.Files

import static java.nio.file.StandardCopyOption.REPLACE_EXISTING

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
}

dependencies {
    // Core dependency for Logstash Output Google Cloud Storage
    compile "com.google.cloud:google-cloud-storage:1.39.0"

    // Dependencies that Logstash includes need to be marked compileOnly.
    // Dependencies of com.google.cloud:google-cloud-storage:1.39.0
    compileOnly "com.fasterxml.jackson.core:jackson-core:2.9.2"
    compile "com.google.api:api-common:1.7.0"
    compile "com.google.api-client:google-api-client:1.24.1"
    compile "com.google.api:gax:1.30.0"
    compile "com.google.api:gax-httpjson:0.47.0"
    compile "com.google.api.grpc:proto-google-common-protos:1.12.0"
    compile "com.google.api.grpc:proto-google-iam-v1:0.12.0"
    compile "com.google.apis:google-api-services-storage:v1-rev135-1.24.1"
    compile "com.google.auth:google-auth-library-credentials:0.10.0"
    compile "com.google.auth:google-auth-library-oauth2-http:0.10.0"
    compile "com.google.cloud:google-cloud-core:1.39.0"
    compile "com.google.cloud:google-cloud-core-http:1.39.0"
    compile "com.google.code.findbugs:jsr305:3.0.2"
    compile "com.google.code.gson:gson:2.7"
    compile "com.google.guava:guava:20.0"
    compile "com.google.http-client:google-http-client:1.24.1"
    compile "com.google.http-client:google-http-client-appengine:1.24.1"
    compile "com.google.http-client:google-http-client-jackson:1.24.1"
    compile "com.google.http-client:google-http-client-jackson2:1.24.1"
    compile "com.google.oauth-client:google-oauth-client:1.24.1"
    compile "com.google.protobuf:protobuf-java:3.6.0"
    compile "com.google.protobuf:protobuf-java-util:3.6.0"
    compile "commons-codec:commons-codec:1.9"
    compile "commons-logging:commons-logging:1.2"
    compile "io.grpc:grpc-context:1.12.0"
    compile "io.opencensus:opencensus-api:0.15.0"
    compile "io.opencensus:opencensus-contrib-http-util:0.15.0"
    compile "joda-time:joda-time:2.9.2"
    compile "org.apache.httpcomponents:httpclient:4.5.3"
    compile "org.apache.httpcomponents:httpcore:4.4.6"
    compile "org.codehaus.jackson:jackson-core-asl:1.9.11"
    compile "org.threeten:threetenbp:1.3.3"
}

task generateGemJarRequiresFile {
    doLast {
        File jars_file = file('lib/logstash-output-google_cloud_storage_jars.rb')
        jars_file.newWriter().withWriter { w ->
            w << "# AUTOGENERATED BY THE GRADLE SCRIPT. DO NOT EDIT.\n\n"
            w << "require \'jar_dependencies\'\n"
            configurations.runtime.allDependencies.each {
                w << "require_jar(\'${it.group}\', \'${it.name}\', \'${it.version}\')\n"
            }
        }
    }
}

task vendor {
    doLast {
        String vendorPathPrefix = "vendor/jar-dependencies"
        configurations.runtime.allDependencies.each { dep ->
            File f = configurations.runtime.filter { it.absolutePath.contains("${dep.group}/${dep.name}/${dep.version}") }.singleFile
            String groupPath = dep.group.replaceAll('\\.', '/')
            File newJarFile = file("${vendorPathPrefix}/${groupPath}/${dep.name}/${dep.version}/${dep.name}-${dep.version}.jar")
            newJarFile.mkdirs()
            Files.copy(f.toPath(), newJarFile.toPath(), REPLACE_EXISTING)
        }
    }
}

vendor.dependsOn(generateGemJarRequiresFile)
